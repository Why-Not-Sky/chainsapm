   
 
 
/****************************************************************************************
*
* This code was generated by the Command Creator tool for the ChainsAPM project. 
* If manual changes are made to the code they could be lost.
* 
****************************************************************************************/ 
#pragma once
#include "ICommand.h"

namespace Commands  
{
    class SendListOfMethods :
        public virtual ICommand
    {


    public:
            enum class MethodSettings
        {
          Module = 0x00000001,
          Assembly = 0x00000004,
          Class = 0x00000008,
          Method = 0x00000010,
          Public = 0x00000020,
          Private = 0x00000040,
          Protected = 0x00000080,
          Friend = 0x00000100,
          HasSignature = 0x00000200
  
        };

        SendListOfMethods(__int64 timestamp, std::vector<MethodSettings> listofmethodsettings, std::vector<std::wstring> listofmethods); 
        ~SendListOfMethods();
        virtual std::shared_ptr<std::vector<char>> Encode();
        virtual std::shared_ptr<ICommand> Decode(std::shared_ptr<std::vector<char>> &data);  
        virtual std::wstring Name();
        virtual std::wstring Description();
        virtual short Code() { return code; }
        std::vector<MethodSettings> ListOfMethodSettings;
        std::vector<std::wstring> ListOfMethods;

    private:

        
        __int64 timestamp; // Always use a 64bit so the message doesn't change
        std::shared_ptr<std::vector<char>> internalvector;
        bool hasEncoded;
        short code;
    };

}
